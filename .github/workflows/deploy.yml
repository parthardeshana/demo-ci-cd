name: Deploy to Hostinger VPS

on:
  push:
    branches:
      - main
      - staging
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Configure SSH Keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Connect to VPS
        run: |
          ssh -o StrictHostKeyChecking=no thunder@62.72.5.193 << EOF
            source ~/.bashrc
            export CURRENT_BRANCH="${{ github.head_ref || github.ref_name }}" 
            EOF

      - name: Change to Project Directory
        run: |
          ssh -o StrictHostKeyChecking=no thunder@62.72.5.193 << EOF
            cd front/demo-ci-cd
            EOF

      - name: Select Branch Directory
        run: |
          ssh -o StrictHostKeyChecking=no thunder@62.72.5.193 << EOF
            if [ "${CURRENT_BRANCH}" == "main" ]; then
              cd main/demo-ci-cd
            elif [ "${CURRENT_BRANCH}" == "staging" ]; then
              cd staging/demo-ci-cd
            elif [ "${CURRENT_BRANCH}" == "dev" ]; then
              cd dev/demo-ci-cd
            else
              exit 1
            fi
            EOF

      - name: Git Operations
        run: |
          ssh -o StrictHostKeyChecking=no thunder@62.72.5.193 << EOF
            git checkout "${CURRENT_BRANCH}"
            git pull origin "${CURRENT_BRANCH}"
            EOF

      - name: Install Dependencies
        run: |
          ssh -o StrictHostKeyChecking=no thunder@62.72.5.193 << EOF
            npm install
            EOF

      - name: Build Project
        run: |
          ssh -o StrictHostKeyChecking=no thunder@62.72.5.193 << EOF
            npm run build
            EOF

      - name: Restart PM2 
        run: |
          ssh -o StrictHostKeyChecking=no thunder@62.72.5.193 << EOF
            if [ "${CURRENT_BRANCH}" == "main" ]; then
              pm2 delete main
              pm2 flush
              PORT=3007 pm2 start npm --name "main" -- start
              pm2 save
            elif [ "${CURRENT_BRANCH}" == "staging" ]; then
              pm2 delete staging
              pm2 flush
              PORT=3009 pm2 start npm --name "staging" -- start
              pm2 save
            elif [ "${CURRENT_BRANCH}" == "dev" ]; then
              pm2 delete dev
              pm2 flush
              PORT=3008 pm2 start npm --name "dev" -- start
              pm2 save
            fi
            EOF